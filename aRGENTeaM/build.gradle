buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.14.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

dependencies {
    compile project(':libraries:AmbilWarna')
    compile files('libs/libGoogleAnalyticsServices.jar')
    compile files('libs/commons-net-3.3.jar')
    compile files('libs/YouTubeAndroidPlayerApi.jar')
    compile 'com.android.support:appcompat-v7:21.0.0'
    compile 'com.android.support:support-v4:21.0.0'
    compile 'com.android.support:cardview-v7:21.0.0'
    compile 'com.android.support:recyclerview-v7:21.0.0'
    compile 'org.jsoup:jsoup:1.8.1@jar'
    compile 'joda-time:joda-time:2.4@jar'
    compile 'com.google.android.gms:play-services:6.1.71'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'ch.acra:acra:4.5.0'
    compile 'net.rdrei.android.dirchooser:library:2.1@aar'
    compile 'com.uwetrottmann:trakt-java:3.3.1'

}


def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'log', '--oneline'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    }
    catch (ignored) {
        return -1;
    }
}

android {
    signingConfigs {

        release {
            keyAlias 'android'
            keyPassword 'android'
            storeFile file('/home/martin/release.keystore')
            storePassword 'android'
        }
    }

    compileSdkVersion 21
    buildToolsVersion '21.1.1'
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    defaultConfig {
        versionCode 30000+getVersionCode()
        versionName "3.0." + getVersionCode()
        signingConfig signingConfigs.release
    }
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
}
